import { useState, useEffect } from 'react';
import axios from 'axio'

const TaskDetailsPage = ({ projectId, taskId }: { projectId: string, taskId: string }) => {
  const [comments, setComments] = useState([]);
  const [newComment, setNewComment] = useState('');
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchComments = async () => {
      try {
        const response = await axios.get(`${import.meta.env.VITE_API_ENDPOINT}/projects/${projectId}/tasks/${taskId}/comments`);
        setComments(response.data.reverse()); // Reverse order to show newest first
      } catch (error) {
        console.error('Error fetching comments:', error);
      } finally {
        setLoading(false);
      }
    };

    fetchComments();
  }, [projectId, taskId]);

  const handleCommentSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!newComment.trim()) return;

    try {
      const commentData = {
        text: newComment,
        userName: 'Current User', // Replace with actual user data
        timestamp: new Date().toISOString(),
      };

      const response = await axios.post(
        `${import.meta.env.VITE_API_ENDPOINT}/projects/${projectId}/tasks/${taskId}/comments`,
        commentData
      );
      setComments([response.data, ...comments]); // Add new comment at the start
      setNewComment(''); // Clear the comment box
    } catch (error) {
      console.error('Error submitting comment:', error);
    }
  };

  return (
    <div>
      <h1>Task Details</h1>

      <div>
        <h3>Comments</h3>
      
          <p>Loading comments...</p>
        ) : (
          <div>
            {comments.map((comment) => (
              <div key={comment.id} className="comment">
                <p><strong>{comment.userName}</strong> - {new Date(comment.timestamp).toLocaleString()}</p>
                <p>{comment.text}</p>
              </div>
            ))}
          </div>
        )}
      </div>

      <div>
        <h3>Add a Comment</h3>
        <form onSubmit={handleCommentSubmit}>
          <textarea
            id="commentBox
          
            onChange={(e) => setNewComment(e.target.value)}
            placeholder="Enter your comment..."
          />
          <button id="addCommentBtn" type="submit">Add Comment</button>
        </form>
      </div>
  
  );
};

export default TaskDetailsPage;
